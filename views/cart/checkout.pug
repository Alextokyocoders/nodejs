extends ../layouts/common

block styles
	link(rel="stylesheet", href="/styles/cart.css")
block script2
	script(src="http://code.jquery.com/jquery-1.12.4.js" integrity="sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=" crossorigin="anonymous")
block content

	- const numberWithCommas = (x) =>  x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

	h5.text-center.mb-4
		strong SHOPPING CART
	- var totalPrices = [...productInCart.map(item => item.price)].reduce((a, b) => a + b, 0)
	.row
		.col-12.col-lg-8#select-quanity    
			each product, index in productInCart
				.card.mb-3
					.card-body.d-flex
						img(src=product.image, style="min-width: 100px; height: 150px")
						.d-lg-flex.flex-wrap.pl-4.flex-grow-1
							.content(style="width: 65%;")
								
									strong= product.name 
										span
											small  by
									.author
										small Samin Nosrat
									small Hardcover
									div
										small
											span.text-success In Stock
									div
										small Reward Points: 1000
							div.d-flex
								.price.mt-1
									small.total-price-per-item(data-price= index) $#{numberWithCommas(product.price)}
								select.custom-select.custom-select-sm.ml-3(style="width: 60px;" data-id= index)
									option(selected='1') 1
									option(value='2') 2
									option(value='3') 3
									option(value='4') 4
									option(value='5') 5
									option(value='6') 6
									option(value='7') 7
									option(value='8') 8
									option(value='9') 9
									option(value='10') 10


						button.close(style="height: 10px;" type='button', aria-label='Close')
							span(aria-hidden='true' data-close= index).close-button Ã—



		.col.col-lg-4
			.card
				.card-body
					h5
						small
							strong SUMMARY
				.card-body
					.d-flex.justify-content-between.p-2
						div Subtotal
						#total-pug $#{numberWithCommas(totalPrices)}
					.d-flex.justify-content-between.p-2
						div Shipping
						h5#shipping-pug.pb-0.mb-0(style="color: #FFBB6A; font-size: 1rem;") $#{numberWithCommas(totalPrices*2/100)}
					p.text-right
						small
							strong(style="color: #FFBB6A;") One shipping fee	
					hr
					.d-flex.justify-content-between.p-2
						div Total
						strong#include-shipprice $#{numberWithCommas(totalPrices*102/100)}
					a(href="http://localhost:3000/payment").btn.btn-dark.px-5.py-2.mt-3.font-weight-bold.mr-2.w-100 Go to checkout

block js
	script.
		const numberWithCommas = (x) =>  x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
		var countItem = "#{countItem}";
		var productInCart = !{JSON.stringify(productInCart)};
		var arrOfQuanity = [...productInCart.map(item => item.quanity)];

		function render(arrOfQuanity) {
			console.log('hihi');
			var arrOfPrice = [];

			for (let i = 0; i < productInCart.length; i++) {
				if (productInCart[i]) {
					$(`.custom-select[data-id= ${i}]`)[0].value = arrOfQuanity[i];
					$(`.total-price-per-item[data-price= ${i}]`)[0].innerHTML = '$' + numberWithCommas(productInCart[i].price * arrOfQuanity[i]);
					arrOfPrice.push(productInCart[i].price * arrOfQuanity[i]);
				}
			}
			var totalPrices = arrOfPrice.reduce((a, b) => a + b, 0);
			console.log(totalPrices);
			$('#total-pug')[0].innerHTML = '$' + numberWithCommas(totalPrices);
			$('#shipping-pug')[0].innerHTML = '$' + numberWithCommas(totalPrices*2/100);
			$('#include-shipprice')[0].innerHTML = '$' + numberWithCommas(totalPrices*102/100);
			$(".total-product.d-inline")[0].innerHTML = arrOfQuanity.reduce((a, b) => parseInt(a) + parseInt(b), 0);
		}

		render(arrOfQuanity);
		
		var quanity = document.getElementById('select-quanity'); 
		quanity.addEventListener('change', onSelectChange); 
		quanity.addEventListener('click', onClose);


		function cuteHide(el) {
			el.animate({opacity: '0'}, 220, function(){
				el.animate({height: '0px'}, 220, function(){
					el.remove();
				});
			});
		}
		


		function onClose(event) {
			if(event.target.classList.contains('close-button')) {
				var selectButton = event.target ;
				var i = parseInt(selectButton.dataset.close);

				var productId = productInCart[i].productId;
				var quanityOfProductDel = $(`.custom-select[data-id= ${i}]`)[0].value;

				var card = $(".close-button[data-close='" + i + "']").parents('.card');
				cuteHide(card);

				productInCart[i] = null;
				arrOfQuanity[i] = 0;
				//- arrOfQuanity.splice(i, 1);
				render(arrOfQuanity);

				(function post() {
					$.ajax({
						type: 'POST',
						url: 'http://localhost:3000/cart/checkout/delete',
						data: {productId: productId, quanity: quanityOfProductDel},
						dataType: 'json'
					})
					.done(function(data) {
						console.log('Get response: ', JSON.stringify(data));
					})
					.fail(function(jqXHR, textStatus, err){
						console.log('AJAX error response:', textStatus);
					});
				})();
			}
		}

		function onSelectChange(event) {
			if(event.target.classList.contains('custom-select')) {
				var selectButton = event.target;
			    var i = parseInt(selectButton.dataset.id);
				var selectedValue = selectButton.value;

				arrOfQuanity[i] = selectedValue;
				render(arrOfQuanity);

			    (function post() {
					$.ajax({
						type: 'POST',
						url: 'http://localhost:3000/cart/checkout/ajaxcall',
						data: {productId: productInCart[i].productId, quanity: selectedValue},
						dataType: 'json'
					})
					.done(function(data) {
						console.log('Get response: ', JSON.stringify(data));
					})
					.fail(function(jqXHR, textStatus, err){
						console.log('AJAX error response:', textStatus);
					});
				})();
			}
		}