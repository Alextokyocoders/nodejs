extends ../layouts/common

block content
    .container
    .pb-5.text-center
        h2 Checkout form
    .row.justify-content-center(style="position: relative;")
        .col-md-4.order-md-2.mb-4(style="")
            .card
                .card-body.d-flex.justify-content-between.align-items-center
                    h4.m-0.text-muted Your cart
                    span.d-inline-block.badge.badge-secondary.badge-pill= countItem
                .card-body
                    .d-flex.justify-content-between.p-2
                        div.text-muted Subtotal
                        #total-pug $#{(totalPrices)}
                    .d-flex.justify-content-between.p-2
                        div.text-muted Shipping
                        h5#shipping-pug.pb-0.mb-0(style="color: #FFBB6A; font-size: 1rem;") $#{(totalPrices*2/100)}
                    p.text-right
                        small
                            strong(style="color: #FFBB6A;") One shipping fee    
                    hr
                    .d-flex.justify-content-between.p-2
                        div.text-muted Total
                        strong#include-shipprice $#{(totalPrices*102/100)}
            h4.d-flex.justify-content-between.align-items-center.mb-3

                
            form.card.p-2
                .input-group
                    input.form-control(type='text', placeholder='Promo code')
                    .input-group-append
                        button.btn.btn-secondary(type='submit') Redeem
        .col-md-6.order-md-1
            h4.mb-3 Billing address
            form.needs-validation(novalidate='')
                .row
                    .col-md-6.mb-3
                        label(for='firstName') First name
                        input#firstName.form-control(type='text', placeholder='', value='', required='')
                        .invalid-feedback Valid first name is required.
                    .col-md-6.mb-3
                        label(for='lastName') Last name
                        input#lastName.form-control(type='text', placeholder='', value='', required='')
                        .invalid-feedback Valid last name is required.
                .mb-3
                    label(for='email')
                        | Email 
                    input#email.form-control(type='email', placeholder='you@example.com')
                    .invalid-feedback Please enter a valid email address for shipping updates.
                .mb-3
                    label(for='address') Address
                    input#address.form-control(type='text', placeholder='1234 Main St', required='')
                    .invalid-feedback Please enter your shipping address.
                .row
                    .col-md-5.mb-3
                        label(for='country') Country
                        select#country.custom-select.d-block.w-100(required='')
                            option(value='') Choose...
                            option United States
                        .invalid-feedback Please select a valid country.
                    .col-md-4.mb-3
                        label(for='state') State
                        select#state.custom-select.d-block.w-100(required='')
                            option(value='') Choose...
                            option California
                        .invalid-feedback Please provide a valid state.
                    .col-md-3.mb-3
                        label(for='zip') Zip
                        input#zip.form-control(type='text', placeholder='', required='')
                        .invalid-feedback Zip code required.
                hr.mb-4
                .custom-control.custom-checkbox
                    input#same-address.custom-control-input(type='checkbox')
                    label.custom-control-label(for='same-address') Shipping address is the same as my billing address
                .custom-control.custom-checkbox
                    input#save-info.custom-control-input(type='checkbox')
                    label.custom-control-label(for='save-info') Save this information for next time
                hr.mb-4
                h4.mb-3 Payment
                .d-block.my-3
                    .custom-control.custom-radio
                        input#credit.custom-control-input(name='paymentMethod', type='radio', checked='', required='')
                        label.custom-control-label(for='credit') Credit card
                    .custom-control.custom-radio
                        input#debit.custom-control-input(name='paymentMethod', type='radio', required='')
                        label.custom-control-label(for='debit') Debit card
                    .custom-control.custom-radio
                        input#paypal.custom-control-input(name='paymentMethod', type='radio', required='')
                        label.custom-control-label(for='paypal') PayPal
                .row
                    .col-md-6.mb-3
                        label(for='cc-name') Name on card
                        input#cc-name.form-control(type='text', placeholder='', required='')
                        small.text-muted Full name as displayed on card
                        .invalid-feedback Name on card is required
                    .col-md-6.mb-3
                        label(for='cc-number') Credit card number
                        input#cc-number.form-control(type='text', placeholder='', required='')
                        .invalid-feedback Credit card number is required
                .row
                    .col-md-3.mb-3
                        label(for='cc-expiration') Expiration
                        input#cc-expiration.form-control(type='text', placeholder='', required='')
                        .invalid-feedback Expiration date required
                    .col-md-3.mb-3
                        label(for='cc-cvv') CVV
                        input#cc-cvv.form-control(type='text', placeholder='', required='')
                        .invalid-feedback Security code required
                hr.mb-4
                a.btn.btn-primary.btn-lg.btn-block(type='submit' href="http://localhost:3000/payment/delivery") Continue to checkout
    footer.my-5.pt-5.text-muted.text-center.text-small

block js
    script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js', integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo', crossorigin='anonymous')
    script.
        window.jQuery || document.write('<script src="../../assets/js/vendor/jquery-slim.min.js"><\\/script>')
    script.
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function() {
        'use strict';
        window.addEventListener('load', function() {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
        event.preventDefault();
        event.stopPropagation();
        }
        form.classList.add('was-validated');
        }, false);
        });
        }, false);
        })();

        const numberWithCommas = (x) =>  x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        var countItem = "#{countItem}";
        var productInCart = !{JSON.stringify(productInCart)};
        var arrOfQuanity = [...productInCart.map(item => item.quanity)];

        function render(arrOfQuanity) {
            var arrOfPrice = [];

            for (let i = 0; i < productInCart.length; i++) {
                if (productInCart[i]) {
                    arrOfPrice.push(productInCart[i].price * arrOfQuanity[i]);
                }
            }
            var totalPrices = arrOfPrice.reduce((a, b) => a + b, 0);

            $('#total-pug')[0].innerHTML = '$' + numberWithCommas(totalPrices);
            $('#shipping-pug')[0].innerHTML = '$' + numberWithCommas(totalPrices*2/100);
            $('#include-shipprice')[0].innerHTML = '$' + numberWithCommas(totalPrices*102/100);
            $(".total-product.d-inline")[0].innerHTML = arrOfQuanity.reduce((a, b) => parseInt(a) + parseInt(b), 0);
        }

        render(arrOfQuanity);